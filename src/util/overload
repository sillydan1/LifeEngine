#ifndef OVERLOAD_HPP
#define OVERLOAD_HPP
#include <type_traits>
#include <utility>

// Shamelessly stolen from here: 
// https://arne-mertz.de/2018/05/overload-build-a-variant-visitor-on-the-fly/
// NOTE: I'm not using the copy-only extensions that Mr. Mertz uses, since 
// 		 my compiler gets cranky when I try to use it... ¯\_(ツ)_/¯
template <class ...Fs>
struct overload : Fs... {
	overload(const Fs& ...ts) : Fs{ts}... {}
	overload(Fs&&... ts) : Fs{ts}... {}
	
	using Fs::operator()...;
};

template <class ...Ts>
overload(Ts&&...) -> overload<std::decay_t<Ts>...>;

#endif // OVERLOAD_HPP
